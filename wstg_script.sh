#!/bin/bash

function show_help {
    echo "usage:        $0 [ -m MODE -u URL -o output file -w wordlist ]"
    echo " "
    echo "-u url:       IP or URL to nmap scan (WITHOUT HTTP(S)://)"
    echo "-o output:    Output file name"
    echo "-w wordist:   Wordlist directory for web directory enum using ffuf"
    echo "-d directory: Directory for URL / IP to fuzz from"
    echo "-f file:      File to upload (for cloudStorage)"
    echo "-i item:      File to take (for cloudStorage)"
    echo "-m mode:      [ 
                infoGathering:  normal test (whatweb, nmap, ffuf enum)
                enumHttpMethods:    enumerate HTTP methods on specific page
                cloudStorage:    Check access control config for cloud storage
                ]"
}

URL=""
OUTPUTNAME=""
WORDLIST=""
TESTCASE=""
DIRECTORY=""
FILE=""
ITEM=""

while getopts "u:o:w:m:d:f:i:h:" opt; do
    case $opt in
    u)
        URL=$OPTARG
        ;;
    o)
        OUTPUTNAME=$OPTARG
        ;;
    w)
        WORDLIST=$OPTARG
        ;;
    m)
        TESTCASE=$OPTARG
        ;;
    d)
        DIRECTORY=$OPTARG
        ;;
    f)
        OBJECT=$OPTARG
        ;;
    i)
        ITEM=$OPTARG
        ;;
    h)
        show_help
        exit 0
        ;;
    \?)
        show_help
        exit 1
        ;;
    esac
done

# if [[ -z $TESTCASE ]]; then
#     echo "Please select mode [ infoGathering, enumHttpMethods, cloudStorage ]"
#     exit 1
# fi

echo "Target IP / URL: $URL"
echo "Output File Name: $OUTPUTNAME"
echo "MODE: $TESTCASE"
echo " "

if [[ -z $URL || -z $OUTPUTNAME ]]; then
    echo "Please input IP / URL, Output File Name and Mode!"
    exit 1
else
    case $TESTCASE in
    infoGathering)
        echo "Beginning info gathering..."
        if [[ -f $WORDLIST ]]; then
            whatweb "$URL" --cookie 'name=value' --verbose >>"$OUTPUTNAME"-whatweb.txt
            nmap -v -Pn -sV --reason --version-all -p 80,443 "$URL" >>"$OUTPUTNAME"-nmap-short.txt
            nmap -v -Pn -p 80,443 --script http-apache-negotiation,http-apache-server-status,http-aspnet-debug,http-auth,http-auth-finder,http-config-backup,http-cors,http-cross-domain-policy,http-default-accounts,http-enum,http-errors,http-generator,http-iis-short-name-brute,http-iis-webdav-vuln,http-internal-ip-disclosure,http-jsonp-detection,http-mcmp,http-method-tamper,http-methods,http-ntlm-info,http-open-proxy,http-open-redirect,http-passwd,http-php-version,http-phpself-xss,http-trace,http-traceroute,http-vuln-cve2012-1823,http-vuln-cve2015-1635,http-vuln-cve2017-5638 $URL -oN $OUTPUTNAME
            ffuf -w "$WORDLIST" -u http://"$URL"/FUZZ -o "$OUTPUTNAME"-ffuf.txt
        else
            echo "Wordlist not found!"
            exit 1
        fi
        ;;
    enumHttpMethods)
        echo "Beginning to enumerate HTTP method..."
        echo "Testing:  http://$URL/$DIRECTORY"
        if [[ -z $DIRECTORY ]]; then
            DIRECTORY="/"
        fi
        nmap -p 443 --script http-methods --script-args http-methods.url-path="$DIRECTORY" "$URL" >>"$OUTPUTNAME"-enumHttp
        ;;
    cloudStorage)
        echo "Testing Cloud Storage..."
        if [[ -z $OBJECT || -z $ITEM ]]; then
            echo "Please enter filename to upload / take!"
            exit 1
        else
            curl -X GET https://"$URL"/"$ITEM"
            curl -X PUT -d 'test' https://"$URL"/"$FILE"
        fi
        ;;
    esac
fi
